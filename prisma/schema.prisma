// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  email    String?  @unique
  phone    String?  @unique
  password String
  role     Role    @default(USER)
  name     String?
}

enum Role {
  ADMIN
  USER
}


enum Gender {
  MALE
  FEMALE
}

model Person {
  id        Int       @id @default(autoincrement())
  firstName String
  familyName String
  gender    Gender
  birthDate DateTime?
  deathDate DateTime?
  phone     String?

  fatherId  Int?
  motherId  Int?

  father    Person?   @relation("FatherRelation", fields: [fatherId], references: [id])
  mother    Person?   @relation("MotherRelation", fields: [motherId], references: [id])

  fatherChildren Person[] @relation("FatherRelation")
  motherChildren Person[] @relation("MotherRelation")

  spouseConnections SpouseRelationship[] @relation("PersonToSpouse")
  spousedByConnections SpouseRelationship[] @relation("SpouseToPersons")

  family       Family?   @relation("RootPersonRelation")
}

model SpouseRelationship {
  id              Int         @id @default(autoincrement())
  
  person          Person      @relation("PersonToSpouse", fields: [personId], references: [id])
  personId        Int
  spouse          Person      @relation("SpouseToPersons", fields: [spouseId], references: [id])
  spouseId        Int
  
  startDate       DateTime?
  endDate         DateTime?
  isActive        Boolean     @default(true)
  
  @@unique([personId, spouseId])
}

enum ChangeRequestAction {
  ADD
  DELETE
  UPDATE
}

enum ChangeRequestStatus {
  PENDING
  APPROVED
  REJECTED
}

model ChangeRequest {
  id         Int      @id @default(autoincrement())
  requesterName  String
  requesterPhone String
  action     ChangeRequestAction   
  targetId   Int?     
  data       Json?    
  status     ChangeRequestStatus   @default(PENDING) 
  createdAt  DateTime @default(now())
}

model Family {
  id             Int     @id     @default(autoincrement()) 
  name           String
  rootPerson     Person  @relation("RootPersonRelation", fields: [rootPersonId], references: [id])
  rootPersonId   Int     @unique
}